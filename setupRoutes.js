//requiring path and fs modules
const path = require('path');
const fs = require('fs');
const adminPagePermission = process.argv[2] ? require(process.argv[2]) : {};

// list of files in src/pages
let adminPages = [];
let userPages = [];

// pages path
// const subPath = process.env.NODE_ENV === 'admin' ? 'src/pages/admin' : 'src/pages/user';
const adminPagesPaths = 'src/pages/admin';
const userPagesPaths = 'src/pages/user';

const adminPagesSubPath = '/pages/admin';
const userPagesSubPath = '/pages/user';

function setupPages(subPath, emptyPages) {
  if (emptyPages) {
    // empty pages
    if (subPath.includes(adminPagesSubPath)) adminPages = [];
    else if (subPath.includes(userPagesSubPath)) userPages = [];
  }
  // joining path of directory 
  const directoryPath = path.join(__dirname, subPath);
  // passing directoryPath and callback function
  const files = fs.readdirSync(directoryPath);
  // listing all files using forEach
  files.forEach(file => {
    if (file.includes('.txt') || file.includes('.json')) return;

    const index = file.indexOf('.');
    if (index !== -1) {
      let page = {path: `${subPath.replace('src', '').concat(file.includes('[') ? `/:${file.substring(file.indexOf('[') + 1, file.indexOf(']')).toLowerCase()}` : '')}`, component: file.includes('[') ? file.substring(file.indexOf('[') + 1, file.indexOf(']')) : file.substring(0, index)};
      if (subPath.includes(adminPagesSubPath)) adminPages.push(page);
      else if (subPath.includes(userPagesSubPath)) userPages.push(page);
    } else {
      setupPages(`${subPath}/${file}`, false);
    }
  });

  let pages = subPath.includes(adminPagesSubPath) ? adminPages : subPath.includes(userPagesSubPath) ? userPages : []

  // log all pages
  console.log(pages);
  console.log("subPath", subPath)
  
const data = `// ⚡ THIS IS A GENERATED FILE FROM 'setupRoute.js' \n// ⚠️ DO NOT EDIT THIS FILE DIRECTLY EXCEPT YOU HAVE READ THE 'README.md' file \n
${pages.map(page => {return `import ${page.component} from '.${page.path.includes(':') ? page.path.substring(0, page.path.indexOf(':') - 1) : page.path}/${page.path.includes(':') ? `[${page.component}]` : page.component}';\n`}).toString().replace(/,/g, '')}
${pages.map(page => {return `export const ${!page.path.includes(':') ? `${page.component.toLowerCase()} = '${page.component.toLowerCase() === 'home' ? '/' : page.path.concat(`/${page.component}`).replace(userPagesSubPath, '').replace(adminPagesSubPath, '').toLowerCase()}';\n` : `${page.path.substring(page.path.indexOf(':') + 1, page.path.length)} = '${page.path.replace(userPagesSubPath, '').replace(adminPagesSubPath, '')}';\n`}`}).toString().replace(/,/g, '')}
export default [${pages.map(page => {return `\n\t{ path: ${page.path === subPath.replace('src', '') ? page.path.replace(subPath.replace('src', ''), `${page.component.toLowerCase()}`) : page.component.toLowerCase()}, component: ${page.component}${subPath.includes(adminPagesSubPath) ? `, permssions: ${JSON.stringify(adminPagePermission[page.component]) || "[]"}` : ""}}`})}\n];`
    
  if (subPath.includes(adminPagesSubPath)) fs.writeFileSync(path.join(__dirname, 'src/adminRoutes.js'), data);
  else if (subPath.includes(userPagesSubPath)) fs.writeFileSync(path.join(__dirname, 'src/userRoutes.js'), data);
  
  console.log("Route file written successfully");
}

function setupRoute(subPath) {
  console.log(adminPagePermission);
  setupPages(subPath, true);
}

setupRoute(adminPagesPaths);
setupRoute(userPagesPaths);

module.exports = { setupRoute };
